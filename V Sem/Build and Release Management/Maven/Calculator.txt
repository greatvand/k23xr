<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>helloworld</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <finalName>helloworld</finalName>
        <plugins>
            <!-- Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                </configuration>
            </plugin>

            <!-- War packaging -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.4</version>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.14.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>


package com.example;

public class Calculator {

    public double add(double a, double b) {
        return a + b;
    }

    public double subtract(double a, double b) {
        return a - b;
    }

    public double multiply(double a, double b) {
        return a * b;
    }

    public double divide(double a, double b) {
        if (b == 0) {
            throw new IllegalArgumentException("Division by zero is not allowed.");
        }
        return a / b;
    }
}

<%@ page import="com.example.Calculator" %>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<!DOCTYPE html>
<html>
<head>
    <title>Simple Calculator</title>
</head>
<body style="font-family: Arial; text-align: center; margin-top: 50px;">
    <h1>Simple Calculator</h1>
    <form method="post">
        <input type="number" name="num1" placeholder="First Number" required>
        <input type="number" name="num2" placeholder="Second Number" required>
        <br><br>
        <input type="submit" name="operation" value="Add">
        <input type="submit" name="operation" value="Subtract">
        <input type="submit" name="operation" value="Multiply">
        <input type="submit" name="operation" value="Divide">
    </form>
    <br><br>

    <%
        String n1 = request.getParameter("num1");
        String n2 = request.getParameter("num2");
        String op = request.getParameter("operation");
        double result = 0;
        String message = "";

        if (n1 != null && n2 != null && op != null) {
            try {
                double num1 = Double.parseDouble(n1);
                double num2 = Double.parseDouble(n2);
                Calculator calc = new Calculator();

                switch (op) {
                    case "Add":
                        result = calc.add(num1, num2);
                        message = "Result: " + result;
                        break;
                    case "Subtract":
                        result = calc.subtract(num1, num2);
                        message = "Result: " + result;
                        break;
                    case "Multiply":
                        result = calc.multiply(num1, num2);
                        message = "Result: " + result;
                        break;
                    case "Divide":
                        if (num2 != 0) {
                            result = calc.divide(num1, num2);
                            message = "Result: " + result;
                        } else {
                            message = "Error: Division by zero is not allowed.";
                        }
                        break;
                    default:
                        message = "Invalid operation.";
                }
            } catch (NumberFormatException e) {
                message = "Error: Invalid number format.";
            }
        }
   %>

    <h2><%= message %></h2>
</body>
</html>


package com.example;

import static org.junit.jupiter.api.Assertions.*;

class CalculatorTest {

    Calculator calculator = new Calculator();
    
    @org.junit.jupiter.api.Test
    void add() {
        assertEquals(8, calculator.add(5, 3));
    }

    @org.junit.jupiter.api.Test
    void subtract() {
        assertEquals(2, calculator.subtract(5, 3));
    }

    @org.junit.jupiter.api.Test
    void multiply() {
        assertEquals(15, calculator.multiply(5, 3));
    }

    @org.junit.jupiter.api.Test
    void divide() {
        assertEquals(2, calculator.divide(6, 3));
    }
    
    @org.junit.jupiter.api.Test
    void divideByZero() {
        assertThrows(ArithmeticException.class, () -> calculator.divide(5, 0));
    }
}